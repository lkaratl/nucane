steps:
  - key: "input"
    label: ":lower_left_crayon: Input"
    input: "Deploy params"
    fields:
      - key: "namespace"
        select: "Namespace"
        hint: "Namespace for deploy"
        options:
          - label: "dev"
            value: "dev"
          - label: "staging"
            value: "staging"
          - label: "prod"
            value: "prod"
        default: "dev"
      - key: "version"
        text: "Version"
        hint: "Value format '\\$BRANCH:\\$BUILD', get exact values from build pipeline"
        default: "$BUILDKITE_BRANCH:latest"
      - key: "profile"
        select: "Profile"
        hint: "Profile with default parameters"
        options:
          - label: "demo"
            value: "demo.config"
        default: "demo.config"
      - key: "params"
        text: "Custom params"
        hint: "Custom environment parameters. Each record from new line: KEY=VALUE"
        required: false
        default: ""
  - wait: ~
  - key: "install"
    label: ":package: Install"
    commands:
      - "echo '+++ Download images'"
      - "export VERSION=$(buildkite-agent meta-data get version) && echo \"VERSION: $$VERSION\""
      - "rclone copy drive:/Managed/Nucane/nucane/build/$(echo \"$$VERSION\" | tr ':' '/')/engine.tar ./target/deploy"
      - "rclone copy drive:/Managed/Nucane/nucane/build/$(echo \"$$VERSION\" | tr ':' '/')/interactor.tar ./target/deploy"
      - "rclone copy drive:/Managed/Nucane/nucane/build/$(echo \"$$VERSION\" | tr ':' '/')/registry.tar ./target/deploy"
      - "rclone copy drive:/Managed/Nucane/nucane/build/$(echo \"$$VERSION\" | tr ':' '/')/simulator.tar ./target/deploy"
      - "rclone copy drive:/Managed/Nucane/nucane/build/$(echo \"$$VERSION\" | tr ':' '/')/storage.tar ./target/deploy"
      - "echo '+++ Load images'"
      - "docker load -i ./target/deploy/engine.tar"
      - "docker load -i ./target/deploy/interactor.tar"
      - "docker load -i ./target/deploy/registry.tar"
      - "docker load -i ./target/deploy/simulator.tar"
      - "buildkite-agent meta-data set 'tag' \"$(docker load -i ./target/deploy/storage.tar | awk -F':' '{print $$NF}')\""
    plugins:
      - "uber-workflow/run-without-clone": ~
  - wait: ~
  - key: "run"
    label: ":rocket: Run"
    commands:
      - "echo '+++ :triangular_flag_on_post: PIPELINE PARAMS :triangular_flag_on_post:'"
      - "export NAMESPACE=$(buildkite-agent meta-data get namespace) && echo \"NAMESPACE: $$NAMESPACE\""
      - "export TAG=$(buildkite-agent meta-data get tag) && echo \"TAG: $$TAG\""
      - "echo '+++ :triangular_flag_on_post: PROFILE PARAMS :triangular_flag_on_post:'"
      - "export PROFILE=$(buildkite-agent meta-data get profile) && echo \"PROFILE: $$PROFILE\""
      - "rclone copy drive:/Managed/Nucane/deploy/$$PROFILE ./target/deploy"
      - "echo '' >> ./target/deploy/$$PROFILE"
      - |
        while IFS= read -r line
                  do
                      echo "$$line"
                      export $$line
                  done < "./target/deploy/$$PROFILE"
      - "echo '+++ :triangular_flag_on_post: CUSTOM PARAMS :triangular_flag_on_post:'"
      - |
        while IFS= read -r line
                  do
                      echo "$$line"
                      export $$line
                  done <<< "$(buildkite-agent meta-data get params)"
      - "echo \"+++ :rotating_light: Run deploy, namespace: \"$$NAMESPACE\", tag: \"$$TAG\" :rotating_light:\""
      - "echo '--- :round_pushpin: COMPOSE FILE :round_pushpin:'"
      - "envsubst < docker-compose.yml"
      - "docker compose up -d"
