# NAMESPACE=test BRANCH=NCN-112 BUILD=80 DEMO=true OKX_API_KEY= OKX_API_PASSPHRASE= OKX_API_SECRET= docker compose up -d
---
version: "3.7"
name: ncn-${NAMESPACE} # todo per namespace
networks:
  db_network:
    driver: bridge
  redpanda_network:
    driver: bridge
volumes:
  redpanda-1: null
services:
  engine-1:
    image: ncn-engine:${BRANCH-$BUILD}
    networks:
      - db_network
      - redpanda_network
    ports:
      - "8081:8081"
    depends_on:
      - db-1
      - redpanda-1
  interactor-1:
    image: ncn-interactor:${BRANCH}-${BUILD}
    environment:
      INTERACTOR_EAC_DEMO: $DEMO
      INTERACTOR_EAC_EXCHANGES_OKX_AUTH_API_KEY: $OKX_API_KEY
      INTERACTOR_EAC_EXCHANGES_OKX_AUTH_API_PASSPHRASE: $OKX_API_PASSPHRASE
      INTERACTOR_EAC_EXCHANGES_OKX_AUTH_API_SECRET: $OKX_API_SECRET
    networks:
      - db_network
      - redpanda_network
    ports:
      - "8083:8083"
    depends_on:
      - db-1
      - redpanda-1
  simulator-1:
    image: ncn-simulator:${BRANCH}-${BUILD}
    networks:
      - db_network
      - redpanda_network
    ports:
      - "8084:8084"
    depends_on:
      - db-1
      - redpanda-1
  registry-1:
    image: ncn-registry:${BRANCH}-${BUILD}
    networks:
      - db_network
      - redpanda_network
    ports:
      - "8085:8085"
    depends_on:
      - db-1
      - redpanda-1
  storage-1:
    image: ncn-storage:${BRANCH}-${BUILD}
    environment:
      STORAGE_DATABASE_URL: mysql://root:root@db-1:3306/ncn_storage
    networks:
      - db_network
      - redpanda_network
    ports:
      - "8082:8082"
    depends_on:
      - db-1
      - redpanda-1

# capability providers
  db-1:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ncn_storage
    networks:
      - db_network
    ports:
      - "3306:3306" # todo close ports
  redpanda-1:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-1:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-1:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-1:33145
      - --advertise-rpc-addr redpanda-1:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.8
    container_name: redpanda-1
    volumes:
      - redpanda-1:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports: # todo close ports
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "19644:9644"
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/vectorized/console:v2.2.4
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-1:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-1:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-1:9644"]
    ports: # todo close ports
      - "8080:8080"
    depends_on:
      - redpanda-1
