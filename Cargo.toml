[workspace]
members = [
    "common/domain-model",
    "common/eac",
    "common/indicators-api",
    "common/plugin-loader",
    "common/plugin-api",
    "engine/config",
    "engine/app",
    "engine/core",
    "engine/ports/core-api",
    "engine/adapters/rest-api-server",
    "engine/adapters/rest-client",
    "engine/libs/rest-api",
    "engine/libs/plugin-internals",
    "interactor/config",
    "interactor/app",
    "interactor/core",
    "interactor/ports/core-api",
    "interactor/ports/exchange-api",
    "interactor/ports/persistence-api",
    "interactor/adapters/okx-exchange",
    "interactor/adapters/rest-api-server",
    "interactor/adapters/inmemory-persistence",
    "interactor/adapters/rest-client",
    "interactor/libs/rest-api",
    "plugins/e2e",
    "registry/config",
    "registry/app",
    "registry/core",
    "registry/ports/core-api",
    "registry/ports/blob-api",
    "registry/adapters/rest-api-server",
    "registry/adapters/inmemory-blob-storage",
    "registry/adapters/rest-client",
    "registry/libs/rest-api",
    "simulator/config",
    "simulator/app",
    "simulator/core",
    "simulator/ports/core-api",
    "simulator/ports/persistence-api",
    "simulator/adapters/rest-api-server",
    "simulator/adapters/postgres-persistence",
    "simulator/adapters/rest-client",
    "simulator/libs/rest-api",
    "standalone/config",
    "standalone/app",
    "storage/config",
    "storage/app",
    "storage/core",
    "storage/ports/core-api",
    "storage/ports/persistence-api",
    "storage/adapters/rest-api-server",
    "storage/adapters/postgres-persistence",
    "storage/adapters/rest-client",
    "storage/libs/rest-api",
    "ui/config",
    "ui/app",
    "ui/core",
    "ui/ports/core-api",
    "ui/ports/chart-builder-api",
    "ui/adapters/rest-api-server",
    "ui/adapters/charming-builder",
    "ui/libs/rest-api"
]

[workspace.package]
version = "0.1.7"
edition = "2021"

[workspace.dependencies]
domain-model = { path = "common/domain-model" }
eac = { path = "common/eac" }
indicators-api = { path = "common/indicators-api" }
plugin-loader = { path = "common/plugin-loader" }
plugin-api = { path = "common/plugin-api" }

engine-config = { path = "engine/config" }
engine-app = { path = "engine/app" }
engine-core = { path = "engine/core" }
engine-core-api = { path = "engine/ports/core-api" }
engine-rest-api-server = { path = "engine/adapters/rest-api-server" }
engine-rest-client = { path = "engine/adapters/rest-client" }
engine-rest-api = { path = "engine/libs/rest-api" }
engine-plugin-internals = { path = "engine/libs/plugin-internals" }

interactor-config = { path = "interactor/config" }
interactor-app = { path = "interactor/app" }
interactor-core = { path = "interactor/core" }
interactor-core-api = { path = "interactor/ports/core-api" }
interactor-exchange-api = { path = "interactor/ports/exchange-api" }
interactor-persistence-api = { path = "interactor/ports/persistence-api" }
interactor-okx-exchange = { path = "interactor/adapters/okx-exchange" }
interactor-rest-api-server = { path = "interactor/adapters/rest-api-server" }
interactor-rest-client = { path = "interactor/adapters/rest-client" }
interactor-inmemory-persistence = { path = "interactor/adapters/inmemory-persistence" }
interactor-rest-api = { path = "interactor/libs/rest-api" }

registry-config = { path = "registry/config" }
registry-app = { path = "registry/app" }
registry-core = { path = "registry/core" }
registry-core-api = { path = "registry/ports/core-api" }
registry-blob-api = { path = "registry/ports/blob-api" }
registry-rest-api-server = { path = "registry/adapters/rest-api-server" }
registry-rest-client = { path = "registry/adapters/rest-client" }
registry-inmemory-blob-storage = { path = "registry/adapters/inmemory-blob-storage" }
registry-rest-api = { path = "registry/libs/rest-api" }

simulator-config = { path = "simulator/config" }
simulator-app = { path = "simulator/app" }
simulator-core = { path = "simulator/core" }
simulator-core-api = { path = "simulator/ports/core-api" }
simulator-persistence-api = { path = "simulator/ports/persistence-api" }
simulator-rest-api-server = { path = "simulator/adapters/rest-api-server" }
simulator-postgres-persistence = { path = "simulator/adapters/postgres-persistence" }
simulator-rest-client = { path = "simulator/adapters/rest-client" }
simulator-rest-api = { path = "simulator/libs/rest-api" }

standalone-config = { path = "standalone/config" }

storage-config = { path = "storage/config" }
storage-app = { path = "storage/app" }
storage-core = { path = "storage/core" }
storage-core-api = { path = "storage/ports/core-api" }
storage-persistence-api = { path = "storage/ports/persistence-api" }
storage-rest-api-server = { path = "storage/adapters/rest-api-server" }
storage-rest-client = { path = "storage/adapters/rest-client" }
storage-postgres-persistence = { path = "storage/adapters/postgres-persistence" }
storage-rest-api = { path = "storage/libs/rest-api" }

ui-config = { path = "ui/config" }
ui-app = { path = "ui/app" }
ui-core = { path = "ui/core" }
ui-core-api = { path = "ui/ports/core-api" }
ui-chart-builder-api = { path = "ui/ports/chart-builder-api" }
ui-rest-api-server = { path = "ui/adapters/rest-api-server" }
ui-charming-builder = { path = "ui/adapters/charming-builder" }
ui-rest-api = { path = "ui/libs/rest-api" }

tokio = { version = "1.28", features = ["full"] }
futures = "0.3.28"
uuid = { version = "1.3.2", features = ["v4", "serde"] }
chrono = { version = "0.4.26", features = ["serde"] }
serde = { verion = "1.0.162", features = ["derive", "serde_derive"] }
serde_json = "1.0"
serde-inline-default = "0.1.1"
serde_urlencoded = "0.7.1"
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
tracing-appender = "0.2.2"
sea-orm = { version = "0.11.3", features = ["sqlx-postgres", "runtime-async-std-native-tls", "macros"] }
sea-orm-migration = { version = "0.11.0", features = ["sqlx-postgres", "runtime-async-std-native-tls"] }
config = { verion = "0.13.3", features = ["yaml"] }
once_cell = "1.17.1"
axum = { version = "0.6.18", features = ["macros", "multipart"] }
hyper = { version = "1.0.0-rc.4", features = ["full"] }
anyhow = "1.0.71"
reqwest = { version = "0.11", features = ["json"] }
surf = "2.3.2"
async-trait = "0.1.68"
nanoid = "0.4.0"
libloading = "0.8"
tempfile = "3.6.0"
crossbeam-channel = "0.5.8"
lazy_static = "1.4.0"
thiserror = "1.0"
http = "0.2.9"
ring = "0.16.20"
fehler = "1.0.0"
derive_builder = "0.12.0"
tungstenite = { version = "0.19.0", features = ["native-tls"] }
url = "2.1.0"
base64 = "0.21.0"
sha2 = "0.10.6"
hmac = "0.12.1"
async-std = { version = "1", features = ["attributes", "tokio1"] }
tokio-tungstenite = { version = "0.19.0", features = ["native-tls"] }
tokio-native-tls = "0.3"
async-broadcast = "0.5.1"
pg-embed = "0.6" # newer versions don't support db creation yet
charming = { version = "0.2.4", features = ["ssr"] }
